//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsumeServicio.WservicioBDD {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WservicioBDD.WebServiceBDDSoap")]
    public interface WebServiceBDDSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselect_Usuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSselect_Usuario();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselect_Usuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSselect_UsuarioAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSValidar_Usuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool WSValidar_Usuario(int id, int contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSValidar_Usuario", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> WSValidar_UsuarioAsync(int id, int contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Usuario_ID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSBuscar_Usuario_ID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Usuario_ID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Usuario_IDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Usuario_ID_Nombre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSBuscar_Usuario_ID_Nombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Usuario_ID_Nombre", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Usuario_ID_NombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsert_Usuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WSinsert_Usuario(int id_clinica, string nombre_usuario, string apellido_usuario, string fecha_nac, string dpi, int nit, string direccion, string correo, int no_telelefono, int contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsert_Usuario", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WSinsert_UsuarioAsync(int id_clinica, string nombre_usuario, string apellido_usuario, string fecha_nac, string dpi, int nit, string direccion, string correo, int no_telelefono, int contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar_Usuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Actualizar_Usuario(int id_usuario, int id_clinica, string nombre_usuario, string apellido_usuario, string fecha_nac, string dpi, int nit, string direccion, string correo, int no_telelefono, int contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar_Usuario", ReplyAction="*")]
        System.Threading.Tasks.Task Actualizar_UsuarioAsync(int id_usuario, int id_clinica, string nombre_usuario, string apellido_usuario, string fecha_nac, string dpi, int nit, string direccion, string correo, int no_telelefono, int contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBorrarUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void WSBorrarUsuario(int id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBorrarUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task WSBorrarUsuarioAsync(int id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselect_Clinica", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSselect_Clinica();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselect_Clinica", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSselect_ClinicaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsert_Clinica", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WSinsert_Clinica(int id_clinica, string nombre_clinica, string direccion, string correo, int no_telelefono, int nit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsert_Clinica", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WSinsert_ClinicaAsync(int id_clinica, string nombre_clinica, string direccion, string correo, int no_telelefono, int nit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBorrar_Clinica", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void WSBorrar_Clinica(int id_clinica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBorrar_Clinica", ReplyAction="*")]
        System.Threading.Tasks.Task WSBorrar_ClinicaAsync(int id_clinica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSActualizar_Clinica", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void WSActualizar_Clinica(int id_clinica, string nombre_clinica, string direccion, string correo, int no_telelefono, int nit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSActualizar_Clinica", ReplyAction="*")]
        System.Threading.Tasks.Task WSActualizar_ClinicaAsync(int id_clinica, string nombre_clinica, string direccion, string correo, int no_telelefono, int nit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Clinica_ID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSBuscar_Clinica_ID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Clinica_ID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Clinica_IDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Clinica_ID_Nombre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSBuscar_Clinica_ID_Nombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Clinica_ID_Nombre", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Clinica_ID_NombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselectEmpleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSselectEmpleado();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselectEmpleado", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSselectEmpleadoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsertEmpleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WSinsertEmpleado(int id_clinica, string nombre_empleado, string apellido_empleado, string dpi, int nit, string direccion, string correo, int no_telelefono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsertEmpleado", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WSinsertEmpleadoAsync(int id_clinica, string nombre_empleado, string apellido_empleado, string dpi, int nit, string direccion, string correo, int no_telelefono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBorrarEmpleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void WSBorrarEmpleado(int id_empleados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBorrarEmpleado", ReplyAction="*")]
        System.Threading.Tasks.Task WSBorrarEmpleadoAsync(int id_empleados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSActualizarEmpleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void WSActualizarEmpleado(int id_empleados, int id_clinica, string nombre_empleado, string apellido_empleado, string dpi, int nit, string direccion, string correo, int no_telelefono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSActualizarEmpleado", ReplyAction="*")]
        System.Threading.Tasks.Task WSActualizarEmpleadoAsync(int id_empleados, int id_clinica, string nombre_empleado, string apellido_empleado, string dpi, int nit, string direccion, string correo, int no_telelefono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Empleado_ID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSBuscar_Empleado_ID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Empleado_ID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Empleado_IDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Empleado_ID_Nombre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSBuscar_Empleado_ID_Nombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscar_Empleado_ID_Nombre", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Empleado_ID_NombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselectPaciente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSselectPaciente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselectPaciente", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSselectPacienteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsertPaciente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WSinsertPaciente(int id_paciente, string nombre_paciente, string apellido_paciente, string familiar_responsable, string fecha_nac, string tipo_sangre, string enferm_preexitente, string dpi, int nit, string direccion, string correo, int no_telelefono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsertPaciente", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WSinsertPacienteAsync(int id_paciente, string nombre_paciente, string apellido_paciente, string familiar_responsable, string fecha_nac, string tipo_sangre, string enferm_preexitente, string dpi, int nit, string direccion, string correo, int no_telelefono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselectMedicamento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSselectMedicamento();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselectMedicamento", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSselectMedicamentoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsertMedicamento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WSinsertMedicamento(int id_medicamento, string descripcion, string precio, string marca, string cantidad, string dosis, string presentacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsertMedicamento", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WSinsertMedicamentoAsync(int id_medicamento, string descripcion, string precio, string marca, string cantidad, string dosis, string presentacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselectEnfermedad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSselectEnfermedad();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSselectEnfermedad", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSselectEnfermedadAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsertEnfermedad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WSinsertEnfermedad(int id_enfermedad, string nombre_enfermedad, string tipo_enfermedad, string nivel_contagio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsertEnfermedad", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WSinsertEnfermedadAsync(int id_enfermedad, string nombre_enfermedad, string tipo_enfermedad, string nivel_contagio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsertAgendarCita", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WSinsertAgendarCita(string id_reg_cita, string id_paciente, string id_clinica, string usuario_creador, string fecha, string costo, string no_consultorio, string forma_pago);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSinsertAgendarCita", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WSinsertAgendarCitaAsync(string id_reg_cita, string id_paciente, string id_clinica, string usuario_creador, string fecha, string costo, string no_consultorio, string forma_pago);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscarCita", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSBuscarCita(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSBuscarCita", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSBuscarCitaAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSTerminarConsulta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WSTerminarConsulta(string id_reg_consul, string id_paciente, string fecha_creacion, string id_medicamento, string id_enfermedad, string medico, string diagnostico, string medicamentos, string estudios, string usuario_creador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSTerminarConsulta", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WSTerminarConsultaAsync(string id_reg_consul, string id_paciente, string fecha_creacion, string id_medicamento, string id_enfermedad, string medico, string diagnostico, string medicamentos, string estudios, string usuario_creador);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceBDDSoapChannel : ConsumeServicio.WservicioBDD.WebServiceBDDSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceBDDSoapClient : System.ServiceModel.ClientBase<ConsumeServicio.WservicioBDD.WebServiceBDDSoap>, ConsumeServicio.WservicioBDD.WebServiceBDDSoap {
        
        public WebServiceBDDSoapClient() {
        }
        
        public WebServiceBDDSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceBDDSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceBDDSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceBDDSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet WSselect_Usuario() {
            return base.Channel.WSselect_Usuario();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSselect_UsuarioAsync() {
            return base.Channel.WSselect_UsuarioAsync();
        }
        
        public bool WSValidar_Usuario(int id, int contrasena) {
            return base.Channel.WSValidar_Usuario(id, contrasena);
        }
        
        public System.Threading.Tasks.Task<bool> WSValidar_UsuarioAsync(int id, int contrasena) {
            return base.Channel.WSValidar_UsuarioAsync(id, contrasena);
        }
        
        public System.Data.DataSet WSBuscar_Usuario_ID(int id) {
            return base.Channel.WSBuscar_Usuario_ID(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Usuario_IDAsync(int id) {
            return base.Channel.WSBuscar_Usuario_IDAsync(id);
        }
        
        public System.Data.DataSet WSBuscar_Usuario_ID_Nombre(string nombre) {
            return base.Channel.WSBuscar_Usuario_ID_Nombre(nombre);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Usuario_ID_NombreAsync(string nombre) {
            return base.Channel.WSBuscar_Usuario_ID_NombreAsync(nombre);
        }
        
        public string WSinsert_Usuario(int id_clinica, string nombre_usuario, string apellido_usuario, string fecha_nac, string dpi, int nit, string direccion, string correo, int no_telelefono, int contrasena) {
            return base.Channel.WSinsert_Usuario(id_clinica, nombre_usuario, apellido_usuario, fecha_nac, dpi, nit, direccion, correo, no_telelefono, contrasena);
        }
        
        public System.Threading.Tasks.Task<string> WSinsert_UsuarioAsync(int id_clinica, string nombre_usuario, string apellido_usuario, string fecha_nac, string dpi, int nit, string direccion, string correo, int no_telelefono, int contrasena) {
            return base.Channel.WSinsert_UsuarioAsync(id_clinica, nombre_usuario, apellido_usuario, fecha_nac, dpi, nit, direccion, correo, no_telelefono, contrasena);
        }
        
        public void Actualizar_Usuario(int id_usuario, int id_clinica, string nombre_usuario, string apellido_usuario, string fecha_nac, string dpi, int nit, string direccion, string correo, int no_telelefono, int contrasena) {
            base.Channel.Actualizar_Usuario(id_usuario, id_clinica, nombre_usuario, apellido_usuario, fecha_nac, dpi, nit, direccion, correo, no_telelefono, contrasena);
        }
        
        public System.Threading.Tasks.Task Actualizar_UsuarioAsync(int id_usuario, int id_clinica, string nombre_usuario, string apellido_usuario, string fecha_nac, string dpi, int nit, string direccion, string correo, int no_telelefono, int contrasena) {
            return base.Channel.Actualizar_UsuarioAsync(id_usuario, id_clinica, nombre_usuario, apellido_usuario, fecha_nac, dpi, nit, direccion, correo, no_telelefono, contrasena);
        }
        
        public void WSBorrarUsuario(int id_usuario) {
            base.Channel.WSBorrarUsuario(id_usuario);
        }
        
        public System.Threading.Tasks.Task WSBorrarUsuarioAsync(int id_usuario) {
            return base.Channel.WSBorrarUsuarioAsync(id_usuario);
        }
        
        public System.Data.DataSet WSselect_Clinica() {
            return base.Channel.WSselect_Clinica();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSselect_ClinicaAsync() {
            return base.Channel.WSselect_ClinicaAsync();
        }
        
        public string WSinsert_Clinica(int id_clinica, string nombre_clinica, string direccion, string correo, int no_telelefono, int nit) {
            return base.Channel.WSinsert_Clinica(id_clinica, nombre_clinica, direccion, correo, no_telelefono, nit);
        }
        
        public System.Threading.Tasks.Task<string> WSinsert_ClinicaAsync(int id_clinica, string nombre_clinica, string direccion, string correo, int no_telelefono, int nit) {
            return base.Channel.WSinsert_ClinicaAsync(id_clinica, nombre_clinica, direccion, correo, no_telelefono, nit);
        }
        
        public void WSBorrar_Clinica(int id_clinica) {
            base.Channel.WSBorrar_Clinica(id_clinica);
        }
        
        public System.Threading.Tasks.Task WSBorrar_ClinicaAsync(int id_clinica) {
            return base.Channel.WSBorrar_ClinicaAsync(id_clinica);
        }
        
        public void WSActualizar_Clinica(int id_clinica, string nombre_clinica, string direccion, string correo, int no_telelefono, int nit) {
            base.Channel.WSActualizar_Clinica(id_clinica, nombre_clinica, direccion, correo, no_telelefono, nit);
        }
        
        public System.Threading.Tasks.Task WSActualizar_ClinicaAsync(int id_clinica, string nombre_clinica, string direccion, string correo, int no_telelefono, int nit) {
            return base.Channel.WSActualizar_ClinicaAsync(id_clinica, nombre_clinica, direccion, correo, no_telelefono, nit);
        }
        
        public System.Data.DataSet WSBuscar_Clinica_ID(int id) {
            return base.Channel.WSBuscar_Clinica_ID(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Clinica_IDAsync(int id) {
            return base.Channel.WSBuscar_Clinica_IDAsync(id);
        }
        
        public System.Data.DataSet WSBuscar_Clinica_ID_Nombre(string nombre) {
            return base.Channel.WSBuscar_Clinica_ID_Nombre(nombre);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Clinica_ID_NombreAsync(string nombre) {
            return base.Channel.WSBuscar_Clinica_ID_NombreAsync(nombre);
        }
        
        public System.Data.DataSet WSselectEmpleado() {
            return base.Channel.WSselectEmpleado();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSselectEmpleadoAsync() {
            return base.Channel.WSselectEmpleadoAsync();
        }
        
        public string WSinsertEmpleado(int id_clinica, string nombre_empleado, string apellido_empleado, string dpi, int nit, string direccion, string correo, int no_telelefono) {
            return base.Channel.WSinsertEmpleado(id_clinica, nombre_empleado, apellido_empleado, dpi, nit, direccion, correo, no_telelefono);
        }
        
        public System.Threading.Tasks.Task<string> WSinsertEmpleadoAsync(int id_clinica, string nombre_empleado, string apellido_empleado, string dpi, int nit, string direccion, string correo, int no_telelefono) {
            return base.Channel.WSinsertEmpleadoAsync(id_clinica, nombre_empleado, apellido_empleado, dpi, nit, direccion, correo, no_telelefono);
        }
        
        public void WSBorrarEmpleado(int id_empleados) {
            base.Channel.WSBorrarEmpleado(id_empleados);
        }
        
        public System.Threading.Tasks.Task WSBorrarEmpleadoAsync(int id_empleados) {
            return base.Channel.WSBorrarEmpleadoAsync(id_empleados);
        }
        
        public void WSActualizarEmpleado(int id_empleados, int id_clinica, string nombre_empleado, string apellido_empleado, string dpi, int nit, string direccion, string correo, int no_telelefono) {
            base.Channel.WSActualizarEmpleado(id_empleados, id_clinica, nombre_empleado, apellido_empleado, dpi, nit, direccion, correo, no_telelefono);
        }
        
        public System.Threading.Tasks.Task WSActualizarEmpleadoAsync(int id_empleados, int id_clinica, string nombre_empleado, string apellido_empleado, string dpi, int nit, string direccion, string correo, int no_telelefono) {
            return base.Channel.WSActualizarEmpleadoAsync(id_empleados, id_clinica, nombre_empleado, apellido_empleado, dpi, nit, direccion, correo, no_telelefono);
        }
        
        public System.Data.DataSet WSBuscar_Empleado_ID(int id) {
            return base.Channel.WSBuscar_Empleado_ID(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Empleado_IDAsync(int id) {
            return base.Channel.WSBuscar_Empleado_IDAsync(id);
        }
        
        public System.Data.DataSet WSBuscar_Empleado_ID_Nombre(string nombre) {
            return base.Channel.WSBuscar_Empleado_ID_Nombre(nombre);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSBuscar_Empleado_ID_NombreAsync(string nombre) {
            return base.Channel.WSBuscar_Empleado_ID_NombreAsync(nombre);
        }
        
        public System.Data.DataSet WSselectPaciente() {
            return base.Channel.WSselectPaciente();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSselectPacienteAsync() {
            return base.Channel.WSselectPacienteAsync();
        }
        
        public string WSinsertPaciente(int id_paciente, string nombre_paciente, string apellido_paciente, string familiar_responsable, string fecha_nac, string tipo_sangre, string enferm_preexitente, string dpi, int nit, string direccion, string correo, int no_telelefono) {
            return base.Channel.WSinsertPaciente(id_paciente, nombre_paciente, apellido_paciente, familiar_responsable, fecha_nac, tipo_sangre, enferm_preexitente, dpi, nit, direccion, correo, no_telelefono);
        }
        
        public System.Threading.Tasks.Task<string> WSinsertPacienteAsync(int id_paciente, string nombre_paciente, string apellido_paciente, string familiar_responsable, string fecha_nac, string tipo_sangre, string enferm_preexitente, string dpi, int nit, string direccion, string correo, int no_telelefono) {
            return base.Channel.WSinsertPacienteAsync(id_paciente, nombre_paciente, apellido_paciente, familiar_responsable, fecha_nac, tipo_sangre, enferm_preexitente, dpi, nit, direccion, correo, no_telelefono);
        }
        
        public System.Data.DataSet WSselectMedicamento() {
            return base.Channel.WSselectMedicamento();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSselectMedicamentoAsync() {
            return base.Channel.WSselectMedicamentoAsync();
        }
        
        public string WSinsertMedicamento(int id_medicamento, string descripcion, string precio, string marca, string cantidad, string dosis, string presentacion) {
            return base.Channel.WSinsertMedicamento(id_medicamento, descripcion, precio, marca, cantidad, dosis, presentacion);
        }
        
        public System.Threading.Tasks.Task<string> WSinsertMedicamentoAsync(int id_medicamento, string descripcion, string precio, string marca, string cantidad, string dosis, string presentacion) {
            return base.Channel.WSinsertMedicamentoAsync(id_medicamento, descripcion, precio, marca, cantidad, dosis, presentacion);
        }
        
        public System.Data.DataSet WSselectEnfermedad() {
            return base.Channel.WSselectEnfermedad();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSselectEnfermedadAsync() {
            return base.Channel.WSselectEnfermedadAsync();
        }
        
        public string WSinsertEnfermedad(int id_enfermedad, string nombre_enfermedad, string tipo_enfermedad, string nivel_contagio) {
            return base.Channel.WSinsertEnfermedad(id_enfermedad, nombre_enfermedad, tipo_enfermedad, nivel_contagio);
        }
        
        public System.Threading.Tasks.Task<string> WSinsertEnfermedadAsync(int id_enfermedad, string nombre_enfermedad, string tipo_enfermedad, string nivel_contagio) {
            return base.Channel.WSinsertEnfermedadAsync(id_enfermedad, nombre_enfermedad, tipo_enfermedad, nivel_contagio);
        }
        
        public string WSinsertAgendarCita(string id_reg_cita, string id_paciente, string id_clinica, string usuario_creador, string fecha, string costo, string no_consultorio, string forma_pago) {
            return base.Channel.WSinsertAgendarCita(id_reg_cita, id_paciente, id_clinica, usuario_creador, fecha, costo, no_consultorio, forma_pago);
        }
        
        public System.Threading.Tasks.Task<string> WSinsertAgendarCitaAsync(string id_reg_cita, string id_paciente, string id_clinica, string usuario_creador, string fecha, string costo, string no_consultorio, string forma_pago) {
            return base.Channel.WSinsertAgendarCitaAsync(id_reg_cita, id_paciente, id_clinica, usuario_creador, fecha, costo, no_consultorio, forma_pago);
        }
        
        public System.Data.DataSet WSBuscarCita(string id) {
            return base.Channel.WSBuscarCita(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSBuscarCitaAsync(string id) {
            return base.Channel.WSBuscarCitaAsync(id);
        }
        
        public string WSTerminarConsulta(string id_reg_consul, string id_paciente, string fecha_creacion, string id_medicamento, string id_enfermedad, string medico, string diagnostico, string medicamentos, string estudios, string usuario_creador) {
            return base.Channel.WSTerminarConsulta(id_reg_consul, id_paciente, fecha_creacion, id_medicamento, id_enfermedad, medico, diagnostico, medicamentos, estudios, usuario_creador);
        }
        
        public System.Threading.Tasks.Task<string> WSTerminarConsultaAsync(string id_reg_consul, string id_paciente, string fecha_creacion, string id_medicamento, string id_enfermedad, string medico, string diagnostico, string medicamentos, string estudios, string usuario_creador) {
            return base.Channel.WSTerminarConsultaAsync(id_reg_consul, id_paciente, fecha_creacion, id_medicamento, id_enfermedad, medico, diagnostico, medicamentos, estudios, usuario_creador);
        }
    }
}
